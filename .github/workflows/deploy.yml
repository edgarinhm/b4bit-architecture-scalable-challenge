name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  terraform:
    name: "Terraform Lint, Security Check, and Validate"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to AWS Cloud
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE }}
          role-session-name: terraform-role-session
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Set up Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TF_VERSION }}

      - name: "Install TFLint"
        run: |
          curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${{ vars.TFLINT_VERSION }}/tflint_linux_amd64.zip
          unzip tflint.zip -d /usr/local/bin/
          tflint --version

      - name: "Install tfsec"
        run: |
          curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ vars.TFSEC_VERSION }}/tfsec-linux-amd64
          chmod +x tfsec
          mv tfsec /usr/local/bin/
          tfsec --version

      - name: "Terraform Init"
        run: terraform init

      - name: "Terraform Format"
        run: terraform fmt

      - name: "Terraform Validate"
        run: terraform validate

      - name: "TFLint"
        run: |
          tflint --init
          tflint

      - name: "TFSec"
        run: tfsec --format sarif .

      - name: "show files"
        run: ls -la

      - name: Upload SARIF file to GitHub Security tab
        if: failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif

  terraform_plan:
    needs: terraform
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to AWS Cloud
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE }}
          role-session-name: terraform-role-session
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Set up Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TF_VERSION }}

      - name: "Terraform Init"
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan

  terraform_apply:
    needs: terraform
    name: Terraform Deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to AWS Cloud
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE }}
          role-session-name: terraform-role-session
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Set up Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TF_VERSION }}

      - name: "Terraform Init"
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply --auto-approve
